# Aeroplane commands description file
#
# Â©2011 Mac Ryan - Licensed under GPL v.3
#
# This file is intended to work with the ATC-NG game available at
# https://github.com/quasipedia/atc-ng
#
# In order to simplify the parser structure, optional arguments are not
# possible for aeroplane commands.

ABORT:
  spellings: [ABORT, AB, STOP]
  arguments: 0
  flags: []
  validator: null
  description: >
    An aeroplane that is manoeuvring can't execute a new command until the
    manoeuvre is completed. The ``ABORT`` command makes a plane that is
    performing a command to stop its execution (maintaining current heading and
    speed and flying to the nearest :term:`flight level`). Once the FL is
    reached, the aeroplane is newly available to receive new commands.
  examples: |

    >>> QFA1234 ABORT
    >>> DLH5678 STOP

ALTITUDE:
  spellings: [ALTITUDE, A, ALT]
  arguments: 1
  flags:
    EXPEDITE: [EXPEDITE, X]
  validator: _validate_altitude
  description: >
    The ``ALTITUDE`` command alters the flying target altitude of an aeroplane.
    Altitude is expressed as a :term:`flight level` (hundreds of metres above
    sea level) in the form of a two-digit number. Altitude must be above 0 and
    below 10000 metres asl and a multiple of 500.

      The ``EXPEDITE`` flag doubles the speed at which an aeroplane climbs or
      descends, but it will also make the aircraft to consume fuel at double
      rate.
  examples: |

    >>> QFA1234 ALTITUDE 55
    >>> DLH5678 ALTITUDE 80 X

BYE:
  spellings: [BYE, BY, FORGET]
  arguments: 0
  flags: []
  validator: null
  description: >
    The ``BYE`` command will inform the pilots that they are cleared to leave
    the aerospace without further instruction, the aeroplane marker on the radar
    screen will then show as *busy* until the aircraft leaves the aerospace.

      It is however still possible to issue ABORT_ in case it becomes necessary
      to alter the course of the aeroplane at a later stage.
  examples: |

    >>> QFA1234 BYE
    >>> DLH5678 FORGET

CIRCLE:
  spellings: [CIRCLE, CI, HOLD]
  arguments: 1
  flags:
    EXPEDITE: [EXPEDITE, X]
  validator: _validate_circle
  description: >
    The ``CIRCLE`` command will make an aeroplane to fly a circular pattern,
    basically holding position.

      The command takes a single argument which is the direction of the
      circling: clockwise (``CW``, ``RIGHT`` or ``R``) or counter-clockwise
      (``CCW``, ``LEFT`` or ``L``).

      The ``EXPEDITE`` flag increases the banking angle of the aeroplane,
      effectively decreasing the time needed for the aeroplane to reach its
      target heading. However, it will also make the aircraft to consume fuel
      at double rate.
  examples: |

    >>> QFA1234 CIRCLE CCW
    >>> DLH5678 HOLD R

CLEAR:
  spellings: [CLEAR, CL, REACH]
  arguments: 1
  flags:
    EXPEDITE: [EXPEDITE, X]
  validator: _validate_clear
  description: >
    The ``CLEAR`` command will inform the pilots on board the aeroplane that
    they are cleared to reach a given beacon on the map. Upon receiving the
    command, the pilot will veer towards it and the aeroplane marker on
    the radar screen will show as *busy* until the plane fly past that point.

      The ``EXPEDITE`` flag increases the rate at which the alignment with the
      beacon is performed, but it will also make the aircraft to consume fuel
      at double rate.
  examples: |

    >>> QFA1234 CLEAR NDB3
    >>> DLH5678 REACH NDB7

HEADING:
  spellings: [HEADING, H, HEAD]
  arguments: 1
  flags:
    EXPEDITE: [EXPEDITE, X]
    LONG: [LONG, L]
  validator: _validate_heading
  description: >
    The ``HEADING`` command alters the target heading of an aeroplane. The
    argument of the command can either be a *new degree heading* (expressed as a
    three-digit figure, or the code of a *beacon*, for which the most
    appropriate heading will be calculated.

      The ``EXPEDITE`` flag increases the banking angle of the aeroplane,
      effectively decreasing the time needed for the aeroplane to reach its
      target heading. However, it will also make the aircraft to consume fuel
      at double rate.

      The plane will always perform the turn in the direction that requires less
      time to complete (smaller angle). The ``LONG`` flag - on the other hand -
      allows to perform the turn in the opposite direction.
  examples: |

    >>> QFA1234 HEADING 080
    >>> DLH5678 H 150 X
    >>> QFA1234 HEAD 270 L X
    >>> DLH5678 HEADING NDB1 LONG EXPEDITE

LAND:
  spellings: [LAND, LA, DOWN]
  arguments: 2
  flags:
    EXPEDITE: [EXPEDITE, X]
  validator: _validate_land
  description: >
    The ``LAND`` command instructs the plane to intercept the descent flight
    path to the foot of a given runaway, and perform the landing.

      The command takes two arguments: the **IATA code of the airport** and
      the **runaway name**.

      The ``EXPEDITE`` flag increases the rate at which the manoeuvre is
      performed, but it will also make the aircraft to consume fuel at double
      rate.
  examples: |

    >>> QFA1234 LAND FRA 07R
    >>> DLH5678 DOWN ARN 26

SPEED:
  spellings: [SPEED, S, SP]
  arguments: 1
  flags:
    EXPEDITE: [EXPEDITE, X]
  validator: _validate_speed
  description: >
    The ``SPEED`` command alter the target ground speed of an aeroplane. The
    target speed of the aeroplane is expressed in **kph**
    (kilometres per hour).

      The ``EXPEDITE`` flag increases the acceleration/deceleration rates,
      making the manoeuvre to execute faster, however it will also make the
      aircraft to consume fuel at double rate.
  examples: |

    >>> QFA1234 SPEED 800
    >>> DLH5678 SP 450 EXPEDITE

SQUAWK:
  spellings: [SQUAWK, SQ, TOUCH]
  arguments: 0
  flags: []
  validator: ''
  description: >
    The ``SQUAWK`` command instructs the target plane transponder to return
    the destination and current heading. Note that the destination is the gate
    or airport that the plane *should* reach, not the one that the player
    *instructed* to head towards.

      The info provided by the ``SQUAWK`` command are also available elsewhere
      in the game interface. The main use of this command is that of updating a
      plane's *time of last received command*. This can be useful if you cycle
      through your flight strips ordered in this way, as it will move the strip
      to the top of the rail without issuing any new instruction to the pilot.

  examples: |

    >>> QFA1234 SQUAWK
    >>> DLH5678 TOUCH

TAKEOFF:
  spellings: [TAKEOFF, TO, UP, FLY]
  arguments: 1
  flags:
    EXPEDITE: [EXPEDITE, X]
  validator: _validate_takeoff
  description: >
    The ``TAKEOFF`` command instructs the plane to take off on a given runaway.
    Once airborne, the plane will keep on climbing until its maximum flight
    altitude and its maximum flight speed, maintaining the heading of the
    runway it departed from. This behaviour can be overridden by issuing the
    command in combination with HEADING_, ALTITUDE_ or SPEED_. Read
    more on the :doc:`specific section<takingoff>` of the manual.

      The ``EXPEDITE`` flag increases the rate at which the manoeuvre is
      performed, but it will also make the aircraft to consume fuel at double
      rate.
  examples: |

    >>> QFA1234 TAKEOFF 04L
    >>> DLH5678 UP 01 X
